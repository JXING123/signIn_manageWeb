<?xml version="1.0" encoding="UTF-8" ?>
<beans  xmlns="http://www.springframework.org/schema/beans"    
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
    xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:aop="http://www.springframework.org/schema/aop"   
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:jee="http://www.springframework.org/schema/jee"  
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xsi:schemaLocation="
    	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd    
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd  
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd  
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd  
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd" >
	
	<!-- 配置我们的spring扫描哪些包，用到了注解的bean -->
	<context:component-scan base-package="com.cn.tonyou.service"/>
	<bean id="serviceAdvisorAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>
	<bean id="serviceAuthorizationAttributeSourceAdvisor" class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager"/>
	</bean>
	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties" />
	</bean>
	
	<!-- oracle连接 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.oracleDriver}" />
		<property name="url" value="${jdbc.oracleUrl}" />
		<property name="username" value="${jdbc.oracleUserName}" />
		<property name="password" value="${jdbc.oraclePassWord}" />
	</bean>
	
	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:com/cn/tonyou/mapper/*.xml"></property>
		<!-- 加载mybatis配置文件-->
		<property name="configLocation" value="classpath:spring-mybatis.xml"></property>
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		 <property name="basePackage" value="com.cn.tonyou.mapper" /> 
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	
	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
    <!--AOP配置事物 --> 
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">  
        <tx:attributes>  
            <tx:method name="delete*"  propagation="REQUIRED" />  
            <tx:method name="update*" propagation="REQUIRED" />  
            <tx:method name="insert*" propagation="REQUIRED" />
            <tx:method name="up*" propagation="REQUIRED" />  
            <tx:method name="edit*" propagation="REQUIRED" />  
            <tx:method name="save*" propagation="REQUIRED" />  
            <tx:method name="add*" propagation="REQUIRED" />  
            <tx:method name="new*" propagation="REQUIRED" />  
            <tx:method name="set*" propagation="REQUIRED" />  
            <tx:method name="delete*" propagation="REQUIRED" />  
            <tx:method name="del*" propagation="REQUIRED" />  
            <tx:method name="query*" read-only="true" propagation="REQUIRED" />   
            <tx:method name="find*" propagation="REQUIRED" read-only="true" />  
            <tx:method name="*" propagation="REQUIRED" />   
        </tx:attributes>  
    </tx:advice> 
     
	 
	
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />	<!-- JSON转换器 -->
			</list>
		</property>
	</bean>
	<!-- 定义跳转的文件的前后缀 ，视图模式配置
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>-->
	
	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"  
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />  
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />  
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />  
    </bean> 
	<!-- 定义一个切面,在定义的切面上加入事物--> 
    <aop:config>  
        <aop:pointcut id="transactionPointcut" expression="execution(* com.cn.tonyou.service.*.*(..))"/>  
        <aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice"/>  
    </aop:config>
    
    <!-- 日志打印，环绕通知拦截请求 -->
  	
  	<!--<bean id="aop" class="com.dct.aop.AopUtil"></bean>
  	
  	<aop:config>
  		<aop:aspect id="dataprint" order="1" ref="aop">
  			<aop:pointcut expression="execution(* com.dct.service..*.*(..))" id="dataprin"/>
  			<aop:before method="beforeMethod" pointcut-ref="dataprin"/>
  			<aop:after method="afterMethod" pointcut-ref="dataprin"/>
  		</aop:aspect>
  			
  		<aop:aspect id="date" order="0" ref="aop">
  			<aop:pointcut expression="execution(* com.dct.service.*.*(..))" id="dp"/>
  			<aop:around method="aroundMethod" pointcut-ref="dp"/>
  		</aop:aspect>
  	</aop:config>-->
  	<!-- 
    	配置SQLSession模板:
    	SqlSessionTemplate将会保证使用
    	的SqlSession是和当前Spring的事务相关的和线程安全。
    	此外，它管理session的生命周期，
    	包含必要的关闭，提交或回滚操作
    -->   
</beans>